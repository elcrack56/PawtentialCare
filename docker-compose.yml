version: '3.8'

services:
  #--- API GATEWAY (TRAEFIK) ---#
  traefik:
    image: "traefik:v2.8"
    container_name: traefik_gateway
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8000" 
    ports:
      - "8000:8000" 
      - "8080:8080" 
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped

  #--- FRONTEND SERVICE ---#
  frontend:
    build: ./frontend
    container_name: pawtential_frontend
    ports:
      - "3000:80"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) && PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  #--- BACKEND SERVICES ---#
  monolith_users_pets:
    build: ./monolith_users_pets
    container_name: monolith_users_pets
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monolith.rule=Host(`localhost`) && (PathPrefix(`/api/users`) || PathPrefix(`/api/pets`))"
      - "traefik.http.services.monolith.loadbalancer.server.port=8000"

  service_bookings:
    build: ./service_bookings
    container_name: service_bookings
    depends_on:
      - rabbitmq
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bookings.rule=Host(`localhost`) && PathPrefix(`/api/bookings`)"
      - "traefik.http.services.bookings.loadbalancer.server.port=8000"

  service_notifications:
    build: ./service_notifications
    container_name: service_notifications
    depends_on:
      - rabbitmq
    restart: unless-stopped

  #--- MESSAGE BROKER ---#
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: 'rabbitmq'
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    restart: unless-stopped